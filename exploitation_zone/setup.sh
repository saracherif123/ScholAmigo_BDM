#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Starting setup for Scholarship CV Matcher...${NC}"

# Check if Python 3 is installed
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}Python 3 is not installed. Please install Python 3 first.${NC}"
    exit 1
fi

# Check if pip is installed
if ! command -v pip3 &> /dev/null; then
    echo -e "${RED}pip3 is not installed. Please install pip3 first.${NC}"
    exit 1
fi

# Check if Homebrew is installed
if ! command -v brew &> /dev/null; then
    echo -e "${RED}Homebrew is not installed. Please install Homebrew first.${NC}"
    exit 1
fi

# Remove existing virtual environment if it exists
if [ -d "venv" ]; then
    echo -e "${YELLOW}Removing existing virtual environment...${NC}"
    rm -rf venv
fi

# Create new virtual environment
echo -e "${YELLOW}Creating new virtual environment...${NC}"
python3 -m venv venv

# Activate virtual environment
echo -e "${YELLOW}Activating virtual environment...${NC}"
source venv/bin/activate

# Verify we're using the correct Python
echo -e "${YELLOW}Using Python from: $(which python)${NC}"

# Upgrade pip and install build tools
echo -e "${YELLOW}Upgrading pip and installing build tools...${NC}"
pip install --upgrade pip
pip install --upgrade setuptools wheel build

# Install Python dependencies from root requirements.txt
echo -e "${YELLOW}Installing Python dependencies...${NC}"
pip install -r ../requirements.txt || {
    echo -e "${RED}Failed to install dependencies. Trying alternative installation method...${NC}"
    # Try installing dependencies one by one
    while IFS= read -r line || [ -n "$line" ]; do
        # Skip comments and empty lines
        [[ $line =~ ^#.*$ ]] && continue
        [[ -z $line ]] && continue
        echo -e "${YELLOW}Installing $line...${NC}"
        pip install "$line" || echo -e "${RED}Failed to install $line${NC}"
    done < "../requirements.txt"
}

# Install Pinecone client
echo -e "${YELLOW}Installing Pinecone client...${NC}"
pip install pinecone-client

# Install system dependencies
echo -e "${YELLOW}Installing system dependencies...${NC}"

# Install Tesseract
if ! command -v tesseract &> /dev/null; then
    echo -e "${YELLOW}Installing Tesseract...${NC}"
    brew install tesseract
fi

# Install Poppler
if ! command -v pdftoppm &> /dev/null; then
    echo -e "${YELLOW}Installing Poppler...${NC}"
    brew install poppler
fi

# Create vector database directory if it doesn't exist
if [ ! -d "vector_database" ]; then
    echo -e "${YELLOW}Creating vector database directory...${NC}"
    mkdir vector_database
fi

echo -e "${GREEN}Setup completed successfully!${NC}"
echo -e "${YELLOW}To run the application:${NC}"
echo -e "1. Activate the virtual environment: ${GREEN}source venv/bin/activate${NC}"
echo -e "2. Initialize the vector database: ${GREEN}python3 init_vector_db.py${NC}"
echo -e "3. Run the application: ${GREEN}streamlit run scholarship_matcher.py${NC}"
echo -e "\n${YELLOW}Note: You'll need to set up your Pinecone API key in your environment variables:${NC}"
echo -e "export PINECONE_API_KEY='your-api-key-here'" 