import os
import json
import faiss
import numpy as np
from sentence_transformers import SentenceTransformer
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

def create_vector_database():
    """Create and initialize the vector database with CVs from trusted zone"""
    
    # Load CVs from trusted zone
    print("Loading CVs from trusted zone...")
    cvs = []
    
    # Path to CVs in trusted zone
    trusted_cv_path = "/Users/sarasaad/Documents/BDMA /UPC/BDM/Project/BDM Scholamigo/ScholAmigo_BDM/trusted_zone/data/resume_data/cleaned"
    
    # Load each CV file
    for filename in os.listdir(trusted_cv_path):
        if filename.endswith('.json'):
            with open(os.path.join(trusted_cv_path, filename), 'r') as f:
                cv_data = json.load(f)
                cvs.append({
                    "id": cv_data.get('id', filename.replace('.json', '')),
                    "title": cv_data.get('title', ''),
                    "content": cv_data.get('content', '')
                })
    
    if not cvs:
        print("No CVs found in trusted zone. Using sample data...")
        # Sample CV data as fallback
        cvs = [
            {
                "id": "cv_001",
                "title": "Senior Data Scientist",
                "content": """
                Experienced data scientist with 5 years of experience in machine learning and Python.
                Strong background in deep learning and natural language processing.
                Published 3 papers in top AI conferences.
                Master's degree in Computer Science with focus on AI.
                GPA: 3.8
                """
            },
            {
                "id": "cv_002",
                "title": "Software Engineer",
                "content": """
                Full-stack developer with expertise in Python and JavaScript.
                Bachelor's degree in Software Engineering.
                GPA: 3.6
                Experience in web development and database management.
                """
            },
            {
                "id": "cv_003",
                "title": "Research Assistant",
                "content": """
                Recent graduate with Bachelor's in Computer Science.
                Research experience in machine learning.
                Python programming skills.
                GPA: 3.9
                """
            }
        ]
    
    # Initialize the sentence transformer model
    print("Loading sentence transformer model...")
    model = SentenceTransformer('all-MiniLM-L6-v2')
    
    # Create embeddings for CVs
    print("Creating embeddings...")
    cv_texts = [cv['content'] for cv in cvs]
    embeddings = model.encode(cv_texts)
    
    # Create FAISS index
    print("Creating FAISS index...")
    dimension = embeddings.shape[1]  # Get dimension from embeddings
    index = faiss.IndexFlatL2(dimension)
    index.add(embeddings.astype('float32'))
    
    # Save the index and CV data
    print("Saving index and CV data...")
    os.makedirs('data', exist_ok=True)
    faiss.write_index(index, 'data/cv_index.faiss')
    
    # Save CV metadata
    cv_metadata = [{'id': cv['id'], 'title': cv['title'], 'content': cv['content']} for cv in cvs]
    with open('data/cv_metadata.json', 'w') as f:
        json.dump(cv_metadata, f)
    
    print(f"Vector database initialization complete! Processed {len(cvs)} CVs.")

if __name__ == "__main__":
    create_vector_database() 